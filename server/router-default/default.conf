proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream api-auth{
	server api-auth:3100;
}

upstream api-content{
	server api-content:3200;
}

upstream api-users{
	server api-users:3300;
}

upstream api-extra{
	server api-extra:3400;
}

upstream api-stuff{
	server api-stuff:3500;
}

upstream web-public{
	server web-public:5000;
}

upstream web-processes{
	server web-processes:5100;
}

upstream web-admin{
	server web-admin:5200;
}


server { 
	listen 3000; 
	server_name openschool.org; 


	location /_next/static {
    		proxy_cache STATIC;
    		proxy_pass http://web-public;

    		# For testing cache - remove before deploying to production
    		add_header X-Cache-Status $upstream_cache_status;
  	}

	location = / { 
		proxy_pass http://web-public; 
			
		proxy_http_version 1.1; 
		proxy_set_header Upgrade $http_upgrade; 
		proxy_set_header Connection 'upgrade'; 
		proxy_set_header Host $host; 
		proxy_cache_bypass $http_upgrade; 
		rewrite /(.*) /$1 break;  
	 	 
	}

	location ^~ / {
		rewrite /(.*) /$1 break;   
		proxy_pass http://web-public/$1; 
			
		proxy_http_version 1.1; 
		proxy_set_header Upgrade $http_upgrade; 
		proxy_set_header Connection 'upgrade'; 
		proxy_set_header Host $host; 
		proxy_cache_bypass $http_upgrade; 
		
	 	 
	}
	location /static {
    		proxy_cache STATIC;
    		proxy_ignore_headers Cache-Control;
    		proxy_cache_valid 60m;
    		proxy_pass http://web-public;
			rewrite /static/(.*) /$1 break; # временно 
			rewrite /static(.*) /$1 break; # временно 

    		# For testing cache - remove before deploying to production
    		add_header X-Cache-Status $upstream_cache_status;
  	}
	

		location ^~ /processes { 
        rewrite /processes/(.*) /$1 break;
		rewrite /processes(.*) /$1 break;
        proxy_pass  http://web-processes;
	}

	location ^~ /admin { 
        rewrite /admin/(.*) /$1 break;
		rewrite /admin(.*) /$1 break;
        proxy_pass  http://web-admin;
	}

	location ^~ /api/auth { 
        rewrite api/auth/(.*) /$1 break;
		rewrite api/auth(.*) /$1 break;
        proxy_pass  http://api-auth;
	}

	location ^~ /api/content { 
        rewrite api/content/(.*) /$1 break;
		rewrite api/content(.*) /$1 break;
        proxy_pass  http://api-content;
	}

	location ^~ /api/users { 
        rewrite api/users/(.*) /$1 break;
		rewrite api/users(.*) /$1 break;
        proxy_pass  http://api-users;
	}

	location ^~ /api/extra { 
        rewrite api/extra/(.*) /$1 break;
		rewrite api/extra(.*) /$1 break;
        proxy_pass  http://api-extra;
	}

	location ^~ /api/stuff { 
        rewrite api/stuff/(.*) /$1 break;
		rewrite api/stuff(.*) /$1 break;
        proxy_pass  http://api-stuff;
	}


	
	


	
	
} 
